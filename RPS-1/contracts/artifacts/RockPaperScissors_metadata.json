{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "player1",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "player2",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "result",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "GameResult",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "MIN_BET",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum RockPaperScissors.Move",
						"name": "_move",
						"type": "uint8"
					}
				],
				"name": "joinGame",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "players",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "playerAddress",
						"type": "address"
					},
					{
						"internalType": "enum RockPaperScissors.Move",
						"name": "move",
						"type": "uint8"
					},
					{
						"internalType": "bool",
						"name": "hasPlayed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/RPS-1.sol": "RockPaperScissors"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/RPS-1.sol": {
			"keccak256": "0x91aa644df278d2c1eb418b5c56398c4eebbf67578277098dede5d56b3b773381",
			"license": "MIT",
			"urls": [
				"bzz-raw://a89b8d2829718a467a146cc4ddaaa35e09f649ef37c4a16bdae81c6885ed2bef",
				"dweb:/ipfs/QmUTViub3oM1QBHE5sMLcTCwcTUXeTBVokVcQrWaiQxAEa"
			]
		}
	},
	"version": 1
}